// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/johnksv/sparebank1-personligklient/models"
)

// GetAccountTransactionsReader is a Reader for the GetAccountTransactions structure.
type GetAccountTransactionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountTransactionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAccountTransactionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetAccountTransactionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAccountTransactionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAccountTransactionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccountTransactionsOK creates a GetAccountTransactionsOK with default headers values
func NewGetAccountTransactionsOK() *GetAccountTransactionsOK {
	return &GetAccountTransactionsOK{}
}

/*GetAccountTransactionsOK handles this case with default header values.

Successful response
*/
type GetAccountTransactionsOK struct {
	Payload *models.TransactionsDto
}

func (o *GetAccountTransactionsOK) Error() string {
	return fmt.Sprintf("[GET /{accountId}/transactions][%d] getAccountTransactionsOK  %+v", 200, o.Payload)
}

func (o *GetAccountTransactionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TransactionsDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountTransactionsUnauthorized creates a GetAccountTransactionsUnauthorized with default headers values
func NewGetAccountTransactionsUnauthorized() *GetAccountTransactionsUnauthorized {
	return &GetAccountTransactionsUnauthorized{}
}

/*GetAccountTransactionsUnauthorized handles this case with default header values.

User not authenticated
*/
type GetAccountTransactionsUnauthorized struct {
	Payload *models.ErrorsDTO
}

func (o *GetAccountTransactionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{accountId}/transactions][%d] getAccountTransactionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAccountTransactionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountTransactionsForbidden creates a GetAccountTransactionsForbidden with default headers values
func NewGetAccountTransactionsForbidden() *GetAccountTransactionsForbidden {
	return &GetAccountTransactionsForbidden{}
}

/*GetAccountTransactionsForbidden handles this case with default header values.

User not authorized
*/
type GetAccountTransactionsForbidden struct {
	Payload *models.ErrorsDTO
}

func (o *GetAccountTransactionsForbidden) Error() string {
	return fmt.Sprintf("[GET /{accountId}/transactions][%d] getAccountTransactionsForbidden  %+v", 403, o.Payload)
}

func (o *GetAccountTransactionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountTransactionsNotFound creates a GetAccountTransactionsNotFound with default headers values
func NewGetAccountTransactionsNotFound() *GetAccountTransactionsNotFound {
	return &GetAccountTransactionsNotFound{}
}

/*GetAccountTransactionsNotFound handles this case with default header values.

Resource not found
*/
type GetAccountTransactionsNotFound struct {
	Payload *models.ErrorsDTO
}

func (o *GetAccountTransactionsNotFound) Error() string {
	return fmt.Sprintf("[GET /{accountId}/transactions][%d] getAccountTransactionsNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountTransactionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
