// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetTransactionDetailsParams creates a new GetTransactionDetailsParams object
// with the default values initialized.
func NewGetTransactionDetailsParams() *GetTransactionDetailsParams {
	var ()
	return &GetTransactionDetailsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTransactionDetailsParamsWithTimeout creates a new GetTransactionDetailsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTransactionDetailsParamsWithTimeout(timeout time.Duration) *GetTransactionDetailsParams {
	var ()
	return &GetTransactionDetailsParams{

		timeout: timeout,
	}
}

// NewGetTransactionDetailsParamsWithContext creates a new GetTransactionDetailsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetTransactionDetailsParamsWithContext(ctx context.Context) *GetTransactionDetailsParams {
	var ()
	return &GetTransactionDetailsParams{

		Context: ctx,
	}
}

// NewGetTransactionDetailsParamsWithHTTPClient creates a new GetTransactionDetailsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetTransactionDetailsParamsWithHTTPClient(client *http.Client) *GetTransactionDetailsParams {
	var ()
	return &GetTransactionDetailsParams{
		HTTPClient: client,
	}
}

/*GetTransactionDetailsParams contains all the parameters to send to the API endpoint
for the get transaction details operation typically these are written to a http.Request
*/
type GetTransactionDetailsParams struct {

	/*AccountID
	  Account identifier

	*/
	AccountID string
	/*TransactionID
	  Transaction identifier

	*/
	TransactionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get transaction details params
func (o *GetTransactionDetailsParams) WithTimeout(timeout time.Duration) *GetTransactionDetailsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get transaction details params
func (o *GetTransactionDetailsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get transaction details params
func (o *GetTransactionDetailsParams) WithContext(ctx context.Context) *GetTransactionDetailsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get transaction details params
func (o *GetTransactionDetailsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get transaction details params
func (o *GetTransactionDetailsParams) WithHTTPClient(client *http.Client) *GetTransactionDetailsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get transaction details params
func (o *GetTransactionDetailsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get transaction details params
func (o *GetTransactionDetailsParams) WithAccountID(accountID string) *GetTransactionDetailsParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get transaction details params
func (o *GetTransactionDetailsParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithTransactionID adds the transactionID to the get transaction details params
func (o *GetTransactionDetailsParams) WithTransactionID(transactionID string) *GetTransactionDetailsParams {
	o.SetTransactionID(transactionID)
	return o
}

// SetTransactionID adds the transactionId to the get transaction details params
func (o *GetTransactionDetailsParams) SetTransactionID(transactionID string) {
	o.TransactionID = transactionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetTransactionDetailsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", o.AccountID); err != nil {
		return err
	}

	// path param transactionId
	if err := r.SetPathParam("transactionId", o.TransactionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
